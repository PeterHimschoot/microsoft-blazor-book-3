@page "/fetchdata"
@inject ForecastGrpcService forecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>Date</th>
        <th>Temp. (C)</th>
        <th>Temp. (F)</th>
        <th>Summary</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      @foreach (var forecast in forecasts)
      {
        <tr>
          <td>@forecast.Date.ToShortDateString()</td>
          <td>@forecast.TemperatureC</td>
          <td>@forecast.TemperatureF</td>
          <td>@forecast.Summary</td>
          <td><img src="@ToImageURL(forecast.Image)"/></td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private string ToImageURL(byte[] data)
  =>  $"data:image/jpg;base64,{Convert.ToBase64String(data)}";
  
  private IEnumerable<WeatherForecast>? forecasts;

  protected override async Task OnInitializedAsync()
  {
    forecasts = await forecastService.GetForecasts();
  }
}
